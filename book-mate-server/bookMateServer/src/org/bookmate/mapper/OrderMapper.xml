<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bookmate.mapper.OrderMapper">

    <resultMap id="BaseResultMap" type="org.bookmate.entities.Order">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="book_id" property="bookId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="org.bookmate.entities.Order" id="orderAndUserAndBookRM" extends="BaseResultMap">
        <association property="user" javaType="org.bookmate.entities.User">
            <id column="user_id" property="userId" jdbcType="INTEGER"/>
            <result column="user_username" property="userUsername" jdbcType="VARCHAR"/>
            <result column="user_password" property="userPassword" jdbcType="VARCHAR"/>
            <result column="user_credit" property="userCredit" jdbcType="INTEGER"/>
            <result column="user_create_time" property="userCreateTime" jdbcType="DATE"/>
            <result column="user_message_status" property="userMessageStatus" jdbcType="INTEGER"/>
            <result column="user_new_status" property="userNewStatus" jdbcType="INTEGER"/>
            <result column="user_forum_status" property="userForumStatus" jdbcType="INTEGER"/>
            <result column="user_recommend_status" property="userRecommendStatus" jdbcType="INTEGER"/>
        </association>
        <association property="book" javaType="org.bookmate.entities.Book">
            <id column="book_id" property="bookId" jdbcType="INTEGER"/>
            <result column="book_number" property="bookNumber" jdbcType="INTEGER"/>
            <result column="book_name" property="bookName" jdbcType="VARCHAR"/>
            <result column="book_author" property="bookAuthor" jdbcType="VARCHAR"/>
            <result column="book_press" property="bookPress" jdbcType="VARCHAR"/>
            <result column="book_image_big" property="bookImageBig" jdbcType="VARCHAR"/>
            <result column="book_image_small" property="bookImageSmall" jdbcType="VARCHAR"/>
            <result column="book_classify_one" property="bookClassifyOne" jdbcType="VARCHAR"/>
            <result column="book_classify_two" property="bookClassifyTwo" jdbcType="VARCHAR"/>
            <result column="book_desc" property="bookDesc" jdbcType="LONGVARCHAR"/>
            <result column="status" property="status" jdbcType="INTEGER"/>
        </association>
    </resultMap>

    <!-- 插入一条新预定记录 -->
    <insert id="insertOrder" parameterType="org.bookmate.entities.Order">
        insert into `order`(book_id, user_id,num) values( #{bookId},  #{userId}, #{num})
    </insert>

    <!-- 通过用户id,图书id,状态查找预定记录 -->
    <select id="selectOrderByUserAndBookAndStatus" parameterType="java.util.Map" resultMap="BaseResultMap">
        select *
        from `order`
        where user_id = #{userId}
          and book_id = #{bookId}
          and status = #{status}
    </select>

    <!-- 通过用户id,图书id,状态删除预定记录 -->
    <update id="deleteOrderByUserAndBookAndStatus" parameterType="java.util.Map">
        update
            `order`
        set status = #{status}
        where user_id = #{userId}
          and book_id = #{bookId}
    </update>

    <!-- 通过用户id,状态查询预定记录 -->
    <select id="selectOrderByUserAndStatus" parameterType="java.util.Map" resultMap="orderAndUserAndBookRM">
        select *
        from `order` br,
             book bo
        where br.book_id = bo.book_id
          and br.user_id = #{userId}
          and br.status = #{status}
    </select>

    <!-- 通过id获取详细预定记录 -->
    <select id="selectOrderById" parameterType="java.lang.Integer" resultMap="orderAndUserAndBookRM">
        select *
        from `order` br,
             user u,
             book bo
        where br.user_id = u.user_id
          and br.book_id = bo.book_id
          and br.id = #{id}
    </select>

    <!-- 更新预定记录 -->
    <update id="updateOrder" parameterType="org.bookmate.entities.Order">
        update `order`
        set book_id     = #{bookId},
            user_id     = #{userId},
            create_time = #{createTime},
            status      = #{status},
            num         = #{num}
        where id = #{id}
    </update>

    <!-- 查询预定数量 -->
    <select id="selectOrderCountByStatus" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select sum(num)
        from `order`
        where status = #{status}
    </select>



    <!-- 获取全部预定信息 -->
    <select id="selectAllOrder" resultMap="orderAndUserAndBookRM">
        select *
        from `order` br,
             book bo,
             user u
        where br.book_id = bo.book_id
          and br.user_id = u.user_id
    </select>

    <select id="selectOrderByStatus" resultMap="orderAndUserAndBookRM" parameterType="java.lang.Integer">
        select *
        from `order` br,
             book bo,
             user u
        where br.book_id = bo.book_id
          and br.user_id = u.user_id
          and br.status = #{status}
    </select>

    <!-- 获取所有的预订预定信息 -->
    <select id="selectAllReserveOrder" resultMap="orderAndUserAndBookRM">
        select *
        from `order`
        where status = 1
    </select>

    <!-- 删除预定信息 -->
    <update id="deleteOrderById" parameterType="java.lang.Integer" >
        update
            `order`
        set status = #{status}
        where id = #{id}
    </update>

    <select id="selectOrderByUserOrBookLike" resultMap="orderAndUserAndBookRM" parameterType="java.util.Map">
        select *
        from `order` br,
             book bo,
             user u
        where br.book_id = bo.book_id
          and br.user_id = u.user_id and  (u.real_name like '%${content}%' or bo.book_name like '%${content}%')
    </select>

</mapper>
